<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zzx.dao.BlogDao">

    <resultMap id="Blog" type="Blog">
        <id property="id" column="blog_id"/>
        <result property="title" column="blog_title"/>
        <result property="meetingData" column="meetingData"/>
        <result property="meetingArea" column="meetingArea"/>
        <result property="attendance" column="attendance"/>
        <result property="leader" column="leader"/>
        <result property="paperURL" column="paperURL"/>
        <result property="pptURL" column="pptURL"/>
        <result property="meetingVideoLink" column="meetingVideoLink"/>
        <result property="body" column="blog_body"/>
        <result property="discussCount" column="blog_discussCount"/>
        <result property="blogViews" column="blog_blogViews"/>
        <result property="time" column="blog_time"/>
        <result property="state" column="blog_state"/>
        <result property="user.id" column="user_id"/>
        <result property="user.name" column="user_name"/>
        <result property="user.reward" column="user_reward"/>
        <result property="likeCount" column="like_count"/>
    </resultMap>

    <insert id="saveBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id" keyColumn="blog_id">
        INSERT INTO blog
        VALUES (null,#{title},#{body},#{discussCount},#{blogViews},#{time},#{state},#{user.id},#{likeCount}
        ,#{meetingData},#{meetingArea},#{attendance},#{leader},#{paperURL},#{pptURL},#{meetingVideoLink})
    </insert>

    <insert id="saveBlogTag">
        INSERT INTO blog_tag
        VALUES (#{blogId},#{tagId})
    </insert>

    <select id="findBlogById" parameterType="Integer" resultMap="Blog">
        SELECT blog_id,blog_title,meetingData,meetingArea,attendance,leader,paperURL,pptURL,meetingVideoLink,
                blog_body,blog_discussCount,blog_blogViews,blog_time,blog_state,b.user_id,u.user_name,u.user_reward,like_count
        FROM blog b LEFT JOIN user u on b.user_id = u.user_id
        WHERE blog_id = #{value} AND b.blog_state = 1
    </select>

    <select id="findBlogByUserId" resultMap="Blog">
        SELECT blog_id,blog_title,meetingData,meetingArea,attendance,leader,paperURL,pptURL,meetingVideoLink,
                LEFT (blog_body,150) AS blog_body,blog_discussCount,blog_blogViews,blog_time,blog_state,b.user_id,u.user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.user_id
        WHERE u.user_id = #{id} AND b.blog_state = 1
        ORDER BY blog_time DESC
        LIMIT #{start},#{showCount}
    </select>

    <select id="getBlogCountByUserId" parameterType="Integer" resultType="Long">
        SELECT count(1)
        FROM blog
        WHERE user_id = #{value} AND blog_state = 1
    </select>

    <select id="getHomeBlogCount" resultType="Long">
        SELECT count(1)
        FROM blog
        WHERE blog_state = 1
    </select>

    <select id="getHomeBlogCountByTag" parameterType="Integer" resultType="Long">
        SELECT count(1)
        FROM blog LEFT JOIN blog_tag ON blog.blog_id = blog_tag.blog_id
        WHERE blog_state = 1 AND blog_tag.tag_id = #{tagId}
    </select>

    <select id="findHomeBlogByTag" resultMap="Blog">
        SELECT b.blog_id,b.blog_title,b.meetingData,b.meetingArea,b.attendance,b.leader,b.paperURL,b.pptURL,b.meetingVideoLink,
                b.blog_body,b.blog_discussCount,b.blog_blogViews,b.blog_time,b.blog_state,b.user_id,u.user_name,u.user_reward
        FROM blog b LEFT JOIN user u on b.user_id = u.user_id LEFT JOIN blog_tag bt ON b.blog_id = bt.blog_id
        WHERE b.blog_state = 1 AND bt.tag_id = #{tagId}
        ORDER BY blog_time DESC
        LIMIT #{start},#{showCount}
    </select>

    <select id="findHomeBlog" resultMap="Blog">
        SELECT blog_id,blog_title,meetingData,meetingArea,attendance,leader,paperURL,pptURL,meetingVideoLink,
                blog_body,blog_discussCount,blog_blogViews,blog_time,blog_state,b.user_id,u.user_name,u.user_reward
        FROM blog b LEFT JOIN user u on b.user_id = u.user_id
        WHERE b.blog_state = 1
        ORDER BY blog_time DESC
        LIMIT #{start},#{showCount}
    </select>

    <select id="findHotBlog" parameterType="Integer" resultMap="Blog">
        SELECT blog_id,blog_title,meetingData,meetingArea,attendance,leader,paperURL,pptURL,meetingVideoLink,
                blog_body,blog_discussCount,blog_blogViews,blog_time,blog_state,b.user_id,u.user_name,u.user_reward
        FROM blog b LEFT JOIN user u on b.user_id = u.user_id
        WHERE blog_state = 1
        ORDER BY blog_blogViews DESC,blog_discussCount DESC
        LIMIT 0,#{value}
    </select>

    <select id="searchBlog" resultMap="Blog">
        SELECT blog_id,blog_title,meetingData,meetingArea,attendance,leader,paperURL,pptURL,meetingVideoLink,
                LEFT (blog_body,150) AS blog_body,blog_discussCount,blog_blogViews,blog_time,blog_state,b.user_id,u.user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.user_id
        WHERE ( b.blog_title LIKE '%${searchText}%' OR b.blog_body LIKE '%${searchText}%') AND b.blog_state = 1
        ORDER BY blog_time DESC
        LIMIT #{start},#{showCount}
    </select>

    <select id="getSearchBlogCount" parameterType="String" resultType="Long">
        SELECT COUNT(1)
        FROM blog
        WHERE ( blog_title LIKE '%${value}%' OR blog_body LIKE '%${value}%') AND blog_state = 1
    </select>

    <select id="findAllblog" resultMap="Blog">
        SELECT blog_id,blog_title,meetingData,meetingArea,attendance,leader,paperURL,pptURL,meetingVideoLink,
                LEFT (blog_body,150) AS blog_body,blog_discussCount,blog_blogViews,blog_time,blog_state,b.user_id,u.user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.user_id
        ORDER BY blog_state DESC,blog_time DESC
        LIMIT #{start},#{showCount}
    </select>

    <select id="getAllBlogCount" resultType="Long">
        SELECT COUNT(1)
        FROM blog
    </select>


    <update id="updateBlog" parameterType="Blog">
        UPDATE blog
        <set>
            <if test="title!=null and title !=''">
                blog_title = #{title},
            </if>

            <if test="body!=null and body !=''">
                blog_body = #{body},
            </if>

            <if test="discussCount!=null and discussCount !=''">
                blog_discussCount = #{discussCount},
            </if>

            <if test="blogViews!=null and blogViews !=''">
                blog_blogViews = #{blogViews},
            </if>

            <if test="time!=null">
                blog_time = #{time},
            </if>

            <if test="state!=null and state !=''">
                blog_state = #{state},
            </if>

            <if test="meetingData!=null">
                meetingData = #{meetingData},
            </if>
            <if test="meetingArea!=null and meetingArea !=''">
                meetingArea = #{meetingArea},
            </if>
            <if test="attendance!=null and attendance !=''">
                attendance = #{attendance},
            </if>
            <if test="leader!=null and leader !=''">
                leader = #{leader},
            </if>
            <if test="paperURL!=null and paperURL !=''">
                paperURL = #{paperURL},
            </if>
            <if test="pptURL!=null and pptURL !=''">
                pptURL = #{pptURL},
            </if>
            <if test="meetingVideoLink!=null and meetingVideoLink !=''">
                meetingVideoLink = #{meetingVideoLink},
            </if>

        </set>
        WHERE blog_id = #{id}
    </update>


    <select id="getSearchAllBlogCount" parameterType="String" resultType="Long">
        SELECT COUNT(1)
        FROM blog
        WHERE blog_title LIKE '%${value}%'
    </select>

    <select id="searchAllBlog" resultMap="Blog">
        SELECT blog_id,blog_title,meetingData,meetingArea,attendance,leader,paperURL,pptURL,meetingVideoLink,
                LEFT (blog_body,150) AS blog_body,blog_discussCount,blog_blogViews,blog_time,blog_state,b.user_id,u.user_name
        FROM blog b LEFT JOIN user u on b.user_id = u.user_id
        WHERE blog_title LIKE '%${searchText}%'
        ORDER BY blog_state DESC,blog_time DESC
        LIMIT #{start},#{showCount}
    </select>

    <select id="statisticalBlogByMonth" parameterType="Integer" resultType="Map">
        SELECT YEAR(blog_time) year, MONTH(blog_time) month,COUNT(1) count FROM blog
        GROUP BY YEAR(blog_time),MONTH(blog_time)
        ORDER by blog_time DESC
        LIMIT 0,#{value}
    </select>



    <select id="findBlogCountByTagId" parameterType="Integer" resultType="Integer">
        SELECT COUNT(1) from blog_tag bt LEFT JOIN blog b on bt.blog_id = b.blog_id
        WHERE tag_id = #{value} AND b.blog_state = 1
    </select>

    <update id="updateLikeCount" parameterType="int">
        UPDATE blog SET like_count = IF(#{count} &lt; 0, 0, #{count})
        WHERE blog_id = #{blogId}
    </update>

    <select id="getBlogLikeCountByBlogId" parameterType="int" resultType="int">
        SELECT like_count FROM blog
        WHERE blog_id = #{blogId}
    </select>

</mapper>